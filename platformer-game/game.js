const canvas = document.getElementById("gamecanvas");
const ctx = canvas.getContext("2d");
const playerImage = new Image();
playerImage.src = "player.jpg"; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ 'player.jpg' ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏≤‡∏ò‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

const gravity = 0.5;
const floor = canvas.height - 50;

let player = {
    x: 50,
    y: floor,
    width: 30,
    height: 30,
    dx: 0,
    dy: 0,
    jumping: false
};

let keys = {};
let score = 0;
let level = 1;
let maxlevel = 3;
let goalline = 750;

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£: levelData
let levelData = {
    1: [
        { x: 300, y: floor - 40, width: 40, height: 40 }, // ‡∏õ‡∏£‡∏±‡∏ö y ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏û‡∏∑‡πâ‡∏ô
        { x: 500, y: floor - 50, width: 50, height: 50 }, // ‡∏õ‡∏£‡∏±‡∏ö y ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏û‡∏∑‡πâ‡∏ô
    ],
    2: [
        { x: 250, y: floor - 40, width: 40, height: 40 },
        { x: 450, y: floor - 60, width: 50, height: 60 },
        { x: 650, y: floor - 50, width: 30, height: 50 },
    ],
    3: [
        { x: 200, y: floor - 40, width: 50, height: 40 },
        { x: 400, y: floor - 70, width: 50, height: 50 },
        { x: 600, y: floor - 80, width: 60, height: 60 },
        { x: 700, y: floor - 100, width: 20, height: 50 },
    ]
};

let obstacles = levelData[level]; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: resetPlayer
function resetPlayer() {
    player.x = 50;
    player.y = floor - player.height; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
    player.dy = 0;
    player.jumping = false;
    player.dx = 0;
}

function drawPlayer() {
    ctx.drawImage(playerImage, player.x, player.y, player.width, player.height);
}

function drawObstacles() {
    ctx.fillStyle = "#2c3e50"; // ‡πÄ‡∏û‡∏¥‡πà‡∏° '#' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏™‡∏µ hex
    obstacles.forEach(obs => { // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
        ctx.fillRect(obs.x, obs.y, obs.width, obs.height);
    });
}

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: updatePlayer
function updatePlayer() {
    player.dy += gravity;
    player.y += player.dy;
    player.x += player.dx;

    if (player.y + player.height > floor) {
        player.y = floor - player.height;
        player.dy = 0;
        player.jumping = false;
    }

    if (player.x < 0) player.x = 0;
    if (player.x + player.width > canvas.width) player.x = canvas.width - player.width; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏Å‡∏î‡∏ú‡∏¥‡∏î
}

function detectCollison() {
    for (let obs of obstacles) {
        if (
            player.x < obs.x + obs.width &&
            player.x + player.width > obs.x && // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏Å‡∏î‡∏ú‡∏¥‡∏î
            player.y < obs.y + obs.height && // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏Å‡∏î‡∏ú‡∏¥‡∏î
            player.y + player.height > obs.y
        ) {
            alert("üí• Game Over! ‡∏ä‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß");
            score = 0;
            level = 1;
            updateUI(); // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
            obstacles = levelData[level]; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
            resetPlayer();
        }
    }
}

function checkGoel() { // "Goal" ‡∏™‡∏∞‡∏Å‡∏î‡∏î‡πâ‡∏ß‡∏¢ "a" - checkGoal ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ô‡∏¥‡∏¢‡∏°‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤
    if (player.x + player.width >= goalline) {
        score += 100;
        level++;
        if (level > maxlevel) {
            alert("üéâ ‡∏ä‡∏ô‡∏∞‡πÄ‡∏Å‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß! ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: " + score);
            score = 0;
            level = 1;
        } else {
            alert("‚úÖ ‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô! ‡πÑ‡∏õ‡∏î‡πà‡∏≤‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ");
        }
        updateUI(); // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
        obstacles = levelData[level]; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
        resetPlayer();
    }
}

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: updateUI
function updateUI() {
    document.getElementById("score").innerText = score;
    document.getElementById("level").innerText = level;
}

function gameLoop() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    updatePlayer(); // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
    drawObstacles();
    detectCollison();
    checkGoel();
    requestAnimationFrame(gameLoop);
}

document.addEventListener("keydown", (e) => {
    keys[e.code] = true;
    if (e.code === "ArrowRight") player.dx = 3;
    if (e.code === "ArrowLeft") player.dx = -3;
    if (e.code === "Space" && !player.jumping) {
        player.dy = -10;
        player.jumping = true;
    }
});

document.addEventListener("keyup", (e) => { // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠ event
    keys[e.code] = false;
    if (e.code === "ArrowRight" || e.code === "ArrowLeft") {
        player.dx = 0;
    }
});

playerImage.onload = () => {
    resetPlayer();
    updateUI(); // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
    gameLoop();
};